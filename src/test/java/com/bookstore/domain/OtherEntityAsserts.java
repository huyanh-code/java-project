package com.bookstore.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OtherEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOtherEntityAllPropertiesEquals(OtherEntity expected, OtherEntity actual) {
        assertOtherEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertOtherEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOtherEntityAllUpdatablePropertiesEquals(OtherEntity expected, OtherEntity actual) {
        assertOtherEntityUpdatableFieldsEquals(expected, actual);
        assertOtherEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOtherEntityAutoGeneratedPropertiesEquals(OtherEntity expected, OtherEntity actual) {
        assertThat(expected)
            .as("Verify OtherEntity auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOtherEntityUpdatableFieldsEquals(OtherEntity expected, OtherEntity actual) {
        assertThat(expected)
            .as("Verify OtherEntity relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getBirthDate()).as("check birthDate").isEqualTo(actual.getBirthDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOtherEntityUpdatableRelationshipsEquals(OtherEntity expected, OtherEntity actual) {
        // empty method
    }
}
